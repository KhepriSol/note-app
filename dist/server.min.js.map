{"version":3,"sources":["server.js"],"names":["express","require","fs","app","path","env","PORT","extended","process","use","allNotes","JSON","parse","readFileSync","notesArray","stringify","get","writeNotes","res","writeFileSync","join","__dirname","req","sendFile","post","newNote","body","length","id","push","idToDelete","noteToDelete","find","note","indexToDelete","indexOf","splice","listen","console","log"],"mappings":"aACA,IAAMA,QAAUC,QAAQ,WADxBC,GAAAD,QAAA,MACMD,KAAOC,QAAU,QAKjBE,IAAMH,UAHNI,KAAOH,QAAQI,IAADC,MAEpB,KACAH,IAAMA,IAAGH,QAAGA,WAAZ,CAAAO,UAAA,KACAJ,IAAMG,IAAIN,QAAGQ,QAKbL,IAAIM,IAAIT,QAAO,OAAQ,WAFI,IAA3BU,SAAAC,KAAAC,MAAAV,GAAAW,aAAA,eAAA,SACAV,SAAQH,WAAAc,GACRX,GAAIM,cAAW,eAAfE,KAEAI,UAAAD,IAEAX,IAAAa,IAAA,IAASC,SAAAA,EAATC,GACEhB,EAAGiB,SAAAA,KAAcC,KAAAC,UAAgBV,0BAQnCR,IAAIa,IAAI,SAAU,SAACM,EAAKJ,GAJxBf,EAAIa,SAASZ,KAAAgB,KAACE,UAAa,0BAI3BnB,IAAIa,IAAI,aAAU,SAAAM,EAACA,GACjBJ,EAAIK,KAAAA,YASNpB,IAAIqB,KAAK,aAAc,SAACF,EAAKJ,GAA7Bf,IAAAsB,EAASH,EAATI,KACED,EAAMA,GAAOf,SAAbiB,OAAA,EACAF,SAAQG,KAAKlB,GACbA,WAASmB,UACTZ,EAAAA,KAAAA,KAOAd,IAAA,OAAM2B,iBAAa,SAAWF,EAA9BV,GACA,IAAMa,EAAerB,EAAAA,OAASsB,GAAKD,EAAqBD,SAArBE,KAAA,SAAAC,GAAA,OAAAA,EAAAL,IAAAE,IAAnCI,EAAAxB,SAAAyB,QAAAJ,GACArB,SAAMwB,OAAAA,EAAyBC,GAC/BzB,WAAS0B,UACTnB,EAAAA,MAAAA,KAIFd,IAAIkC,OAAO/B,KAAM,WACfgC,QAAQC,IAARD,yBAAAA,OAAAhC","file":"server.min.js","sourcesContent":["// Dependencies\r\nconst express = require('express');\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\n// Set up the app\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3001;\r\n\r\n// Middleware\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.json());\r\napp.use(express.static('public'));\r\n\r\n// Read and write data to JSON file\r\nconst allNotes = JSON.parse(fs.readFileSync('./db/db.json', 'utf8'));\r\nfunction writeNotes(notesArray) {\r\n  fs.writeFileSync('./db/db.json', JSON.stringify(notesArray));\r\n}\r\n\r\n// Routes\r\napp.get('/', (req, res) => {\r\n  res.sendFile(path.join(__dirname, './public/index.html'));\r\n});\r\n\r\napp.get('/notes', (req, res) => {\r\n  res.sendFile(path.join(__dirname, './public/notes.html'));\r\n});\r\n\r\napp.get('/api/notes', (req, res) => {\r\n  res.json(allNotes);\r\n});\r\n\r\n\r\n// Note posting\r\napp.post('/api/notes', (req, res) => {\r\n  const newNote = req.body;\r\n  newNote.id = allNotes.length + 1;\r\n  allNotes.push(newNote);\r\n  writeNotes(allNotes);\r\n  res.json(newNote);\r\n});\r\n\r\n\r\n// Delete notes\r\napp.delete('/api/notes/:id', (req, res) => {\r\n  const idToDelete = req.params.id;\r\n  const noteToDelete = allNotes.find((note) => note.id == idToDelete);\r\n  const indexToDelete = allNotes.indexOf(noteToDelete);\r\n  allNotes.splice(indexToDelete, 1);\r\n  writeNotes(allNotes);\r\n  res.json(true);\r\n});\r\n\r\napp.listen(PORT, () => {\r\n  console.log(`App listening on PORT ${PORT}`);\r\n});\r\n"]}