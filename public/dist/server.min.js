"use strict";var express=require("express"),path=require("path"),fs=require("fs"),util=require("util"),app=express(),PORT=process.env.PORT||3e3,readFileAsync=util.promisify(fs.readFile),writeFileAsync=util.promisify(fs.writeFile);app.use(express.urlencoded({extended:!0})),app.use(express.json()),app.use(express.static("public")),app.get("/api/notes",function(e,n){var r,t;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,regeneratorRuntime.awrap(readFileAsync("./db/db.json","utf8"));case 3:r=e.sent,t=JSON.parse(r),n.json(t),e.next=12;break;case 8:e.prev=8,e.t0=e.catch(0),console.log(e.t0),n.status(500).send("Error retrieving notes");case 12:case"end":return e.stop()}},null,null,[[0,8]])}),app.post("/api/notes",function(n,r){var t,s,a;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=n.body,e.next=4,regeneratorRuntime.awrap(readFileAsync("./db/db.json","utf8"));case 4:return s=e.sent,a=JSON.parse(s),t.id=a.length+1,a.push(t),e.next=10,regeneratorRuntime.awrap(writeFileAsync("./db/db.json",JSON.stringify(a)));case 10:r.json(t),e.next=17;break;case 13:e.prev=13,e.t0=e.catch(0),console.log(e.t0),r.status(500).send("Error saving note");case 17:case"end":return e.stop()}},null,null,[[0,13]])}),app.delete("/api/notes/:id",function(n,r){var t,s,a,i;return regeneratorRuntime.async(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,t=parseInt(n.params.id),e.next=4,regeneratorRuntime.awrap(readFileAsync("./db/db.json","utf8"));case 4:return s=e.sent,a=JSON.parse(s),i=a.filter(function(e){return e.id!==t}),e.next=9,regeneratorRuntime.awrap(writeFileAsync("./db/db.json",JSON.stringify(i)));case 9:r.send("Note deleted successfully"),e.next=16;break;case 12:e.prev=12,e.t0=e.catch(0),console.log(e.t0),r.status(500).send("Error deleting note");case 16:case"end":return e.stop()}},null,null,[[0,12]])}),app.get("/notes",function(e,n){n.sendFile(path.join(__dirname,"public","notes.html"))}),app.get("*",function(e,n){n.sendFile(path.join(__dirname,"public","index.html"))}),app.listen(PORT,function(){console.log("Server listening on http://localhost:".concat(PORT))});
//# sourceMappingURL=server.min.js.map
