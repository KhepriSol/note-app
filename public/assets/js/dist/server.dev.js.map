{"version":3,"sources":["server.js"],"names":["express","require","path","fs","util","readFileAsync","promisify","readFile","writeFileAsync","writeFile","app","PORT","process","env","use","urlencoded","extended","json","get","req","res","then","data","notes","concat","JSON","parse","post","note","body","id","length","push","stringify","son","idToDelete","parseInt","params","newNotesData","i","send","sendFile","join","__dirname","listen","console","log"],"mappings":"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","sourcesContent":["const express = require('express');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nconst util = require('util');\r\n\r\n//handling async processes\r\nconst readFileAsync = util.promisify(fs.readFile);\r\nconst writeFileAsync = util.promisify(fs.writeFile);\r\n\r\n\r\n//setting up server\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3000;\r\n\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.json());\r\n\r\n// middleware\r\napp.use(express.static('./develop.public'));\r\n\r\n//API Route and Get REquest\r\napp.get('/api/notes', function(req, res) {\r\n    readFileAsync('./develop/db/db.json', 'utf8').then(function(data) {\r\n        notes = [].concat(JSON.parse(data))\r\n        res.json(notes);\r\n    })\r\n});\r\n\r\n//api route and post req\r\napp.post('/api/notes', function(req, res) {\r\n    const note = req.body;\r\n    readFileAsync('./develop/db/db.son', 'utf8').then(function(data){\r\n        const notes = [].concat(JSON.parse(data));\r\n        note.id = notes.length + 1\r\n        notes.push(note);\r\n        return notes\r\n     }).then(function(notes) {\r\n            writeFileAsync('./develop/db/db.json', JSON.stringify(notes))\r\n            res.son(note);\r\n        })\r\n});\r\n\r\n//delete\r\napp.delete('api/notes/:id', function(req, res) {\r\n    const idToDelete = parseInt(req.params.id);\r\n    readFileAsync('./develop/db/db.json', 'utf8').then(function(data) {\r\n        const notes = [].concat(JSON.parse(data));\r\n        const newNotesData = []\r\n        for (let i = 0; i<notes.length; i++) {\r\n            if(idToDelete !== notes[i].id) {\r\n                newNotesData.push(notes[i])\r\n            }\r\n        }\r\n        return newNotesData\r\n    }).then(function(notes) {\r\n        writeFileAsync('./develop/db/db.json', JSON.stringify(notes))\r\n        res.send('saved success!');\r\n    })\r\n})\r\n\r\n//html Routes\r\napp.get('/notes', function(req, res) {\r\n    res.sendFile(path.join(__dirname, './develop/public/notes.html'));\r\n});\r\napp.get('/', function(req, res) {\r\n    res.sendFile(path.join(__dirname, './develop/public/index.html'));\r\n});\r\napp.get('*', function(req, res) {\r\n    res.sendFile(path.join(__dirname, './develop/public/index.html'));\r\n});\r\n\r\n//listening uwu\r\napp.listen(PORT, function() {\r\n    console.log('app listening on Port' + PORT);\r\n});\r\n\r\n\r\n\r\n\r\n"],"file":"server.dev.js"}