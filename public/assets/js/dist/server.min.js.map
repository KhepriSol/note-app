{"version":3,"sources":["server.js"],"names":["express","require","path","util","readFileAsync","promisify","fs","readFile","writeFileAsync","writeFile","PORT","app","extended","process","use","req","res","then","data","notes","concat","JSON","parse","post","note","body","id","stringify","idToDelete","parseInt","params","newNotesData","i","length","send","get","sendFile","join","__dirname","listen","console","log"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,GAAOC,QAAGA,MAGVE,KAAOF,QAAQ,QADbG,cAARD,KAAAE,UAAAC,GAAAC,UAKMC,eAAiBL,KAAKE,UAAUC,GAAGG,WADnCL,IAAAA,UACAI,KAAAA,QAAiBL,IAAIO,MAACL,IAI5BM,IAAMA,IAAGX,QAAGA,WAAZ,CAAAY,UAAA,KACAD,IAAMD,IAAIV,QAAGa,QAEcF,IAA3BG,IAAAd,QAAA,OAAA,qBAIAW,IAAIG,IAAId,aAAO,SAAQe,EAAAC,GAInBZ,cAAc,uBAAwB,QAAQa,KAAK,SAASC,GADxDC,MAAA,GAAAC,OAAcC,KAAAC,MAAcN,IAChCZ,EAAAA,KAAce,WAOlBR,IAAIY,KAAK,aAAc,SAASR,EAAKC,GAAjCO,IAAKC,EAAAT,EAATU,KACIrB,cAAiBqB,sBAAjB,QAAAR,KAAA,SAAAC,GACAd,IAAAA,EAAc,GAAAgB,OAAAC,KAADC,MAAwBJ,IAGjCC,OAFMA,EAAKO,GAAGP,EAAGC,OAAYE,EACzBH,EAAMA,KAAKK,GACJA,IACXP,KAAOE,SAAPA,GACKX,eAAgB,uBAAAa,KAAAM,UAAAR,IACjBX,EAAAA,IAAegB,OAM3Bb,IAAG,OAAA,gBAAQ,SAAiBI,EAASA,GACjC,IAAMa,EAAaC,SAAaC,EAAAA,OAAhCJ,IACAtB,cAAc,uBAAwB,QAAQa,KAAK,SAASC,GAGxD,IAFMC,IAAKA,EAAMC,GAAHA,OAAeE,KAAMJ,MAAnCA,IACMa,EAAN,GACSC,EAAI,EAAGA,EAAEb,EAAMc,OAAQD,IAAtBJ,IAAcK,EAAxBD,GAAiCN,IAC1BE,EAAeT,KAASO,EAAIM,IAGlC,OAAAD,IAEFd,KAAK,SAASE,GADbX,eAAA,uBAAAa,KAAAM,UAAAR,IACDF,EAAKiB,KAAA,sBAOZvB,IAAIwB,IAAI,SAAU,SAASpB,EAAKC,GAA5BmB,EAAIC,SAARlC,KAAkBmC,KAAAC,UAAmB,kCAEpC3B,IAFDwB,IAAA,IAAA,SAAApB,EAAAC,GAGImB,EAAIC,SAAKlC,KAAAmC,KAAAC,UAAmB,kCAE/B3B,IAFDwB,IAAA,IAAA,SAAApB,EAAAC,GAGImB,EAAIC,SAAKlC,KAAAmC,KAAAC,UAAmB,kCAKhC3B,IAAI4B,OAAO7B,KAAM,WACb8B,QAAQC,IAAI,wBAA0B/B","file":"server.min.js","sourcesContent":["const express = require('express');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nconst util = require('util');\r\n\r\n//handling async processes\r\nconst readFileAsync = util.promisify(fs.readFile);\r\nconst writeFileAsync = util.promisify(fs.writeFile);\r\n\r\n\r\n//setting up server\r\nconst app = express();\r\nconst PORT = process.env.PORT || 3000;\r\n\r\napp.use(express.urlencoded({ extended: true }));\r\napp.use(express.json());\r\n\r\n// middleware\r\napp.use(express.static('./develop.public'));\r\n\r\n//API Route and Get REquest\r\napp.get('/api/notes', function(req, res) {\r\n    readFileAsync('./develop/db/db.json', 'utf8').then(function(data) {\r\n        notes = [].concat(JSON.parse(data))\r\n        res.json(notes);\r\n    })\r\n});\r\n\r\n//api route and post req\r\napp.post('/api/notes', function(req, res) {\r\n    const note = req.body;\r\n    readFileAsync('./develop/db/db.son', 'utf8').then(function(data){\r\n        const notes = [].concat(JSON.parse(data));\r\n        note.id = notes.length + 1\r\n        notes.push(note);\r\n        return notes\r\n     }).then(function(notes) {\r\n            writeFileAsync('./develop/db/db.json', JSON.stringify(notes))\r\n            res.son(note);\r\n        })\r\n});\r\n\r\n//delete\r\napp.delete('api/notes/:id', function(req, res) {\r\n    const idToDelete = parseInt(req.params.id);\r\n    readFileAsync('./develop/db/db.json', 'utf8').then(function(data) {\r\n        const notes = [].concat(JSON.parse(data));\r\n        const newNotesData = []\r\n        for (let i = 0; i<notes.length; i++) {\r\n            if(idToDelete !== notes[i].id) {\r\n                newNotesData.push(notes[i])\r\n            }\r\n        }\r\n        return newNotesData\r\n    }).then(function(notes) {\r\n        writeFileAsync('./develop/db/db.json', JSON.stringify(notes))\r\n        res.send('saved success!');\r\n    })\r\n})\r\n\r\n//html Routes\r\napp.get('/notes', function(req, res) {\r\n    res.sendFile(path.join(__dirname, './develop/public/notes.html'));\r\n});\r\napp.get('/', function(req, res) {\r\n    res.sendFile(path.join(__dirname, './develop/public/index.html'));\r\n});\r\napp.get('*', function(req, res) {\r\n    res.sendFile(path.join(__dirname, './develop/public/index.html'));\r\n});\r\n\r\n//listening uwu\r\napp.listen(PORT, function() {\r\n    console.log('app listening on Port' + PORT);\r\n});\r\n\r\n\r\n\r\n\r\n"]}