{"version":3,"sources":["index.js"],"names":["noteTitle","noteText","saveNoteBtn","newNoteBtn","noteList","window","location","pathname","document","querySelector","querySelectorAll","show","elem","style","display","hide","activeNote","getNotes","fetch","method","headers","saveNote","note","body","JSON","stringify","deleteNote","id","renderActiveNote","setAttribute","value","title","text","removeAttribute","handleNoteSave","newNote","then","getAndRenderNotes","handleNoteDelete","e","stopPropagation","target","noteId","parse","parentElement","getAttribute","handleNoteView","preventDefault","handleNewNoteView","handleRenderSaveBtn","trim","renderNoteList","notes","json","jsonNotes","forEach","el","innerHTML","noteListItems","createLi","delBtn","liEl","createElement","classList","add","spanEl","innerText","addEventListener","append","delBtnEl","length","push","li","dataset"],"mappings":";;AAAA,IAAIA,SAAJ;AACA,IAAIC,QAAJ;AACA,IAAIC,WAAJ;AACA,IAAIC,UAAJ;AACA,IAAIC,QAAJ;;AAEA,IAAIC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAAjC,EAA2C;AACzCP,EAAAA,SAAS,GAAGQ,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAZ;AACAR,EAAAA,QAAQ,GAAGO,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAAX;AACAP,EAAAA,WAAW,GAAGM,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAd;AACAN,EAAAA,UAAU,GAAGK,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAb;AACAL,EAAAA,QAAQ,GAAGI,QAAQ,CAACE,gBAAT,CAA0B,6BAA1B,CAAX;AACD,C,CAED;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,IAAD,EAAU;AACrBA,EAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,GAAqB,QAArB;AACD,CAFD,C,CAIA;;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACH,IAAD,EAAU;AACrBA,EAAAA,IAAI,CAACC,KAAL,CAAWC,OAAX,GAAqB,MAArB;AACD,CAFD,C,CAIA;;;AACA,IAAIE,UAAU,GAAG,EAAjB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SACfC,KAAK,CAAC,YAAD,EAAe;AAClBC,IAAAA,MAAM,EAAE,KADU;AAElBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFS,GAAf,CADU;AAAA,CAAjB;;AAQA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD;AAAA,SACfJ,KAAK,CAAC,YAAD,EAAe;AAClBC,IAAAA,MAAM,EAAE,MADU;AAElBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFS;AAKlBG,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,IAAf;AALY,GAAf,CADU;AAAA,CAAjB;;AASA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD;AAAA,SACjBT,KAAK,sBAAeS,EAAf,GAAqB;AACxBR,IAAAA,MAAM,EAAE,QADgB;AAExBC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAFe,GAArB,CADY;AAAA,CAAnB;;AAQA,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7Bb,EAAAA,IAAI,CAACb,WAAD,CAAJ;;AAEA,MAAIc,UAAU,CAACW,EAAf,EAAmB;AACjB3B,IAAAA,SAAS,CAAC6B,YAAV,CAAuB,UAAvB,EAAmC,IAAnC;AACA5B,IAAAA,QAAQ,CAAC4B,YAAT,CAAsB,UAAtB,EAAkC,IAAlC;AACA7B,IAAAA,SAAS,CAAC8B,KAAV,GAAkBd,UAAU,CAACe,KAA7B;AACA9B,IAAAA,QAAQ,CAAC6B,KAAT,GAAiBd,UAAU,CAACgB,IAA5B;AACD,GALD,MAKO;AACLhC,IAAAA,SAAS,CAACiC,eAAV,CAA0B,UAA1B;AACAhC,IAAAA,QAAQ,CAACgC,eAAT,CAAyB,UAAzB;AACAjC,IAAAA,SAAS,CAAC8B,KAAV,GAAkB,EAAlB;AACA7B,IAAAA,QAAQ,CAAC6B,KAAT,GAAiB,EAAjB;AACD;AACF,CAdD;;AAgBA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,MAAMC,OAAO,GAAG;AACdJ,IAAAA,KAAK,EAAE/B,SAAS,CAAC8B,KADH;AAEdE,IAAAA,IAAI,EAAE/B,QAAQ,CAAC6B;AAFD,GAAhB;AAIAT,EAAAA,QAAQ,CAACc,OAAD,CAAR,CAAkBC,IAAlB,CAAuB,YAAM;AAC3BC,IAAAA,iBAAiB;AACjBT,IAAAA,gBAAgB;AACjB,GAHD;AAID,CATD,C,CAWA;;;AACA,IAAMU,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAO;AAC9B;AACAA,EAAAA,CAAC,CAACC,eAAF;AAEA,MAAMlB,IAAI,GAAGiB,CAAC,CAACE,MAAf;AACA,MAAMC,MAAM,GAAGlB,IAAI,CAACmB,KAAL,CAAWrB,IAAI,CAACsB,aAAL,CAAmBC,YAAnB,CAAgC,WAAhC,CAAX,EAAyDlB,EAAxE;;AAEA,MAAIX,UAAU,CAACW,EAAX,KAAkBe,MAAtB,EAA8B;AAC5B1B,IAAAA,UAAU,GAAG,EAAb;AACD;;AAEDU,EAAAA,UAAU,CAACgB,MAAD,CAAV,CAAmBN,IAAnB,CAAwB,YAAM;AAC5BC,IAAAA,iBAAiB;AACjBT,IAAAA,gBAAgB;AACjB,GAHD;AAID,CAfD,C,CAiBA;;;AACA,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,CAACP,CAAD,EAAO;AAC5BA,EAAAA,CAAC,CAACQ,cAAF;AACA/B,EAAAA,UAAU,GAAGQ,IAAI,CAACmB,KAAL,CAAWJ,CAAC,CAACE,MAAF,CAASG,aAAT,CAAuBC,YAAvB,CAAoC,WAApC,CAAX,CAAb;AACAjB,EAAAA,gBAAgB;AACjB,CAJD,C,CAMA;;;AACA,IAAMoB,iBAAiB,GAAG,SAApBA,iBAAoB,CAACT,CAAD,EAAO;AAC/BvB,EAAAA,UAAU,GAAG,EAAb;AACAY,EAAAA,gBAAgB;AACjB,CAHD;;AAKA,IAAMqB,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,MAAI,CAACjD,SAAS,CAAC8B,KAAV,CAAgBoB,IAAhB,EAAD,IAA2B,CAACjD,QAAQ,CAAC6B,KAAT,CAAeoB,IAAf,EAAhC,EAAuD;AACrDnC,IAAAA,IAAI,CAACb,WAAD,CAAJ;AACD,GAFD,MAEO;AACLS,IAAAA,IAAI,CAACT,WAAD,CAAJ;AACD;AACF,CAND,C,CAQA;;;AACA,IAAMiD,cAAc,GAAG,SAAjBA,cAAiB,CAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CACCA,KAAK,CAACC,IAAN,EADD;;AAAA;AACjBC,UAAAA,SADiB;;AAErB,cAAIjD,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAAjC,EAA2C;AACzCH,YAAAA,QAAQ,CAACmD,OAAT,CAAiB,UAACC,EAAD;AAAA,qBAASA,EAAE,CAACC,SAAH,GAAe,EAAxB;AAAA,aAAjB;AACD;;AAEGC,UAAAA,aANiB,GAMD,EANC,EAQrB;;AACMC,UAAAA,QATe,GASJ,SAAXA,QAAW,CAAC3B,IAAD,EAAyB;AAAA,gBAAlB4B,MAAkB,uEAAT,IAAS;AACxC,gBAAMC,IAAI,GAAGrD,QAAQ,CAACsD,aAAT,CAAuB,IAAvB,CAAb;AACAD,YAAAA,IAAI,CAACE,SAAL,CAAeC,GAAf,CAAmB,iBAAnB;AAEA,gBAAMC,MAAM,GAAGzD,QAAQ,CAACsD,aAAT,CAAuB,MAAvB,CAAf;AACAG,YAAAA,MAAM,CAACC,SAAP,GAAmBlC,IAAnB;AACAiC,YAAAA,MAAM,CAACE,gBAAP,CAAwB,OAAxB,EAAiCrB,cAAjC;AAEAe,YAAAA,IAAI,CAACO,MAAL,CAAYH,MAAZ;;AAEA,gBAAIL,MAAJ,EAAY;AACV,kBAAMS,QAAQ,GAAG7D,QAAQ,CAACsD,aAAT,CAAuB,GAAvB,CAAjB;AACAO,cAAAA,QAAQ,CAACN,SAAT,CAAmBC,GAAnB,CACE,KADF,EAEE,cAFF,EAGE,aAHF,EAIE,aAJF,EAKE,aALF;AAOAK,cAAAA,QAAQ,CAACF,gBAAT,CAA0B,OAA1B,EAAmC7B,gBAAnC;AAEAuB,cAAAA,IAAI,CAACO,MAAL,CAAYC,QAAZ;AACD;;AAED,mBAAOR,IAAP;AACD,WAlCoB;;AAoCrB,cAAIP,SAAS,CAACgB,MAAV,KAAqB,CAAzB,EAA4B;AAC1BZ,YAAAA,aAAa,CAACa,IAAd,CAAmBZ,QAAQ,CAAC,gBAAD,EAAmB,KAAnB,CAA3B;AACD;;AAEDL,UAAAA,SAAS,CAACC,OAAV,CAAkB,UAACjC,IAAD,EAAU;AAC1B,gBAAMkD,EAAE,GAAGb,QAAQ,CAACrC,IAAI,CAACS,KAAN,CAAnB;AACAyC,YAAAA,EAAE,CAACC,OAAH,CAAWnD,IAAX,GAAkBE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAlB;AAEAoC,YAAAA,aAAa,CAACa,IAAd,CAAmBC,EAAnB;AACD,WALD;;AAOA,cAAInE,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAAjC,EAA2C;AACzCmD,YAAAA,aAAa,CAACH,OAAd,CAAsB,UAACjC,IAAD;AAAA,qBAAUlB,QAAQ,CAAC,CAAD,CAAR,CAAYgE,MAAZ,CAAmB9C,IAAnB,CAAV;AAAA,aAAtB;AACD;;AAjDoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CAoDA;;;AACA,IAAMe,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAMpB,QAAQ,GAAGmB,IAAX,CAAgBe,cAAhB,CAAN;AAAA,CAA1B;;AAEA,IAAI9C,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAAjC,EAA2C;AACzCL,EAAAA,WAAW,CAACiE,gBAAZ,CAA6B,OAA7B,EAAsCjC,cAAtC;AACA/B,EAAAA,UAAU,CAACgE,gBAAX,CAA4B,OAA5B,EAAqCnB,iBAArC;AACAhD,EAAAA,SAAS,CAACmE,gBAAV,CAA2B,OAA3B,EAAoClB,mBAApC;AACAhD,EAAAA,QAAQ,CAACkE,gBAAT,CAA0B,OAA1B,EAAmClB,mBAAnC;AACD;;AAEDZ,iBAAiB","sourcesContent":["let noteTitle;\r\nlet noteText;\r\nlet saveNoteBtn;\r\nlet newNoteBtn;\r\nlet noteList;\r\n\r\nif (window.location.pathname === '/notes') {\r\n  noteTitle = document.querySelector('.note-title');\r\n  noteText = document.querySelector('.note-textarea');\r\n  saveNoteBtn = document.querySelector('.save-note');\r\n  newNoteBtn = document.querySelector('.new-note');\r\n  noteList = document.querySelectorAll('.list-container .list-group');\r\n}\r\n\r\n// Show an element\r\nconst show = (elem) => {\r\n  elem.style.display = 'inline';\r\n};\r\n\r\n// Hide an element\r\nconst hide = (elem) => {\r\n  elem.style.display = 'none';\r\n};\r\n\r\n// activeNote is used to keep track of the note in the textarea\r\nlet activeNote = {};\r\n\r\nconst getNotes = () =>\r\n  fetch('/api/notes', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\nconst saveNote = (note) =>\r\n  fetch('/api/notes', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(note),\r\n  });\r\n\r\nconst deleteNote = (id) =>\r\n  fetch(`/api/notes/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n\r\nconst renderActiveNote = () => {\r\n  hide(saveNoteBtn);\r\n\r\n  if (activeNote.id) {\r\n    noteTitle.setAttribute('readonly', true);\r\n    noteText.setAttribute('readonly', true);\r\n    noteTitle.value = activeNote.title;\r\n    noteText.value = activeNote.text;\r\n  } else {\r\n    noteTitle.removeAttribute('readonly');\r\n    noteText.removeAttribute('readonly');\r\n    noteTitle.value = '';\r\n    noteText.value = '';\r\n  }\r\n};\r\n\r\nconst handleNoteSave = () => {\r\n  const newNote = {\r\n    title: noteTitle.value,\r\n    text: noteText.value,\r\n  };\r\n  saveNote(newNote).then(() => {\r\n    getAndRenderNotes();\r\n    renderActiveNote();\r\n  });\r\n};\r\n\r\n// Delete the clicked note\r\nconst handleNoteDelete = (e) => {\r\n  // prevents the click listener for the list from being called when the button inside of it is clicked\r\n  e.stopPropagation();\r\n\r\n  const note = e.target;\r\n  const noteId = JSON.parse(note.parentElement.getAttribute('data-note')).id;\r\n\r\n  if (activeNote.id === noteId) {\r\n    activeNote = {};\r\n  }\r\n\r\n  deleteNote(noteId).then(() => {\r\n    getAndRenderNotes();\r\n    renderActiveNote();\r\n  });\r\n};\r\n\r\n// Sets the activeNote and displays it\r\nconst handleNoteView = (e) => {\r\n  e.preventDefault();\r\n  activeNote = JSON.parse(e.target.parentElement.getAttribute('data-note'));\r\n  renderActiveNote();\r\n};\r\n\r\n// Sets the activeNote to and empty object and allows the user to enter a new note\r\nconst handleNewNoteView = (e) => {\r\n  activeNote = {};\r\n  renderActiveNote();\r\n};\r\n\r\nconst handleRenderSaveBtn = () => {\r\n  if (!noteTitle.value.trim() || !noteText.value.trim()) {\r\n    hide(saveNoteBtn);\r\n  } else {\r\n    show(saveNoteBtn);\r\n  }\r\n};\r\n\r\n// Render the list of note titles\r\nconst renderNoteList = async (notes) => {\r\n  let jsonNotes = await notes.json();\r\n  if (window.location.pathname === '/notes') {\r\n    noteList.forEach((el) => (el.innerHTML = ''));\r\n  }\r\n\r\n  let noteListItems = [];\r\n\r\n  // Returns HTML element with or without a delete button\r\n  const createLi = (text, delBtn = true) => {\r\n    const liEl = document.createElement('li');\r\n    liEl.classList.add('list-group-item');\r\n\r\n    const spanEl = document.createElement('span');\r\n    spanEl.innerText = text;\r\n    spanEl.addEventListener('click', handleNoteView);\r\n\r\n    liEl.append(spanEl);\r\n\r\n    if (delBtn) {\r\n      const delBtnEl = document.createElement('i');\r\n      delBtnEl.classList.add(\r\n        'fas',\r\n        'fa-trash-alt',\r\n        'float-right',\r\n        'text-danger',\r\n        'delete-note'\r\n      );\r\n      delBtnEl.addEventListener('click', handleNoteDelete);\r\n\r\n      liEl.append(delBtnEl);\r\n    }\r\n\r\n    return liEl;\r\n  };\r\n\r\n  if (jsonNotes.length === 0) {\r\n    noteListItems.push(createLi('No saved Notes', false));\r\n  }\r\n\r\n  jsonNotes.forEach((note) => {\r\n    const li = createLi(note.title);\r\n    li.dataset.note = JSON.stringify(note);\r\n\r\n    noteListItems.push(li);\r\n  });\r\n\r\n  if (window.location.pathname === '/notes') {\r\n    noteListItems.forEach((note) => noteList[0].append(note));\r\n  }\r\n};\r\n\r\n// Gets notes from the db and renders them to the sidebar\r\nconst getAndRenderNotes = () => getNotes().then(renderNoteList);\r\n\r\nif (window.location.pathname === '/notes') {\r\n  saveNoteBtn.addEventListener('click', handleNoteSave);\r\n  newNoteBtn.addEventListener('click', handleNewNoteView);\r\n  noteTitle.addEventListener('keyup', handleRenderSaveBtn);\r\n  noteText.addEventListener('keyup', handleRenderSaveBtn);\r\n}\r\n\r\ngetAndRenderNotes();"],"file":"index.dev.js"}